version: "3"
# Services Foundation Layer:
# This layer provides essential backend services required for the Smart Highway Net platform.

# Volumes
volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local
  redis-data:
    driver: local
  mongo_data:
    driver: local

services:

# MongoDB is a free and open-source cross-platform document-oriented database program
  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    networks:
      - smart-highway-net


  # Web-based MongoDB admin interface, written with Node.js and express
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: on-failure
    env_file:
      - .env
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongo
    links:
      - mongo
    ports:
      - "8083:8081"
    networks:
      - smart-highway-net

  # Apache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    # ZooKeeper is designed to "fail-fast", so it is important to allow it to
    # restart automatically.
    restart: unless-stopped
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - smart-highway-net 

  # Apache Kafka is an open-source distributed event streaming platform used 
  # by thousands of companies for high-performance data pipelines, 
  # streaming analytics, data integration, and mission-critical applications.
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    volumes:
      - kafka-data:/var/lib/kafka
    environment:
      # Required. Instructs Kafka how to get in touch with ZooKeeper.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_COMPRESSION_TYPE: gzip
      # Required when running in a single-node cluster, as we are. We would be able to take the default if we had
      # three or more nodes in the cluster.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # Required. Kafka will publish this address to ZooKeeper so clients know
      # how to get in touch with Kafka. "PLAINTEXT" indicates that no authentication
      # mechanism will be used.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: 9091
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"  # Expose Kafka port to the host
    links:
      - zookeeper
    depends_on:
      - zookeeper
    networks:
      - smart-highway-net 

  # Manage & view data inside your Apache Kafka Â® cluster
  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 8088:8080
    depends_on:
      - zookeeper
      - kafka
    links:
      - zookeeper
      - kafka
    networks:
      - smart-highway-net 


  # Eclipse Mosquitto MQTT broker for message communication
  mosquitto:
    image: eclipse-mosquitto:2.0.14
    restart: on-failure
    container_name: mosquitto
    env_file:
      - ./.env
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    environment:
      - MOSQUITTO_USERNAME=${MQTT_BROKER_USERNAME}
      - MOSQUITTO_PASSWORD=${MQTT_BROKER_PASSWORD}
    ports:
      - "1883:1883"
    networks:
      - smart-highway-net

  # HashiCorp Vault for managing secrets and protecting sensitive data
  vault:
    image: vault:1.8.4
    restart: on-failure
    container_name: vault
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
    ports:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    networks:
      - smart-highway-net 

  # Redis container for data caching
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - smart-highway-net

networks:
  smart-highway-net:
    driver: bridge
