version: "3"
# Data Storage Layer:
# This Docker Compose configuration sets up services for data storage, including MongoDB and MinIO for object storage.

# Volumes
volumes:
  mongo_data:
    driver: local
  minio-data-1:
    driver: local
  minio-data-2:
    driver: local
  redis-data:
    driver: local

services:
  # MongoDB is a free and open-source cross-platform document-oriented database program
  mongo:
    image: mongo
    container_name: mongo
    env_file:
      - .env
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    networks:
      - smart-highway-net

  # Redis container for data caching
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - smart-highway-net

  # HashiCorp Vault for managing secrets and protecting sensitive data
  vault:
    image: vault:1.8.4
    restart: on-failure
    container_name: vault
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
    ports:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    networks:
      - smart-highway-net 

  minio1:
    image: minio/minio
    container_name: minio1
    env_file:
      - .env
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - minio-data-1:/data
    command: server http://minio{1...2}/data
    networks:
      - smart-highway-net

  minio2:
    image: minio/minio
    container_name: minio2
    env_file:
      - .env
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - minio-data-2:/data
    command: server http://minio{1...2}/data
    networks:
      - smart-highway-net

  haproxy:
    image: haproxytech/haproxy-alpine:2.7
    container_name: minio_haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - '9000:9000'
      - '1936:1936'
    networks:
      - smart-highway-net

networks:
  smart-highway-net:
    driver: bridge
