version: "3"
# Data Orchestration Layer:
# This Docker Compose

# Volumes
volumes:
  apache-nifi_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  
services:

  # Unofficial convenience binaries and Docker images for Apache NiFi 
  nifi:
    build: 
      context: ./nifi
    container_name: nifi
    volumes:
      - apache-nifi_data:/apache/nifi
    env_file:
      - ./.env
    ports:
      - '8080:8080'
    networks:
      - smart-highway-net

  # ZooKeeper is a centralized service for maintaining configuration information,
  # naming, providing distributed synchronization, and providing group services.
  # It provides distributed coordination for our Kafka cluster.
  # http://zookeeper.apache.org/
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - smart-highway-net

  # Kafka is a distributed streaming platform. It is used to build real-time streaming
  # data pipelines that reliably move data between systems and platforms, and to build
  # real-time streaming applications that transform or react to the streams of data.
  # http://kafka.apache.org/
  kafka:
    image: docker.io/bitnami/kafka:3.6
    container_name: kafka
    ports:
      - 9092:9092
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_ENABLE_KRAFT: false
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://192.168.1.39:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - smart-highway-net

   # Eclipse Mosquitto MQTT broker for message communication
  mosquitto:
    image: eclipse-mosquitto:2.0.14
    restart: on-failure
    container_name: mosquitto
    env_file:
      - ./.env
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    environment:
      MOSQUITTO_USERNAME: ${MQTT_BROKER_USERNAME}
      MOSQUITTO_PASSWORD: ${MQTT_BROKER_PASSWORD}
    ports:
      - 1883:1883
    networks:
      - smart-highway-net

networks:
  smart-highway-net:
    driver: bridge
